'\" t
.\"     srecord - manipulate eprom load files
.\"     Copyright (C) 2023 Daniel Anselmi
.\"
.\"     This program is free software; you can redistribute it and/or modify
.\"     it under the terms of the GNU General Public License as published by
.\"     the Free Software Foundation; either version 3 of the License, or
.\"     (at your option) any later version.
.\"
.\"     This program is distributed in the hope that it will be useful,
.\"     but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"     GNU General Public License for more details.
.\"
.\"     You should have received a copy of the GNU General Public License
.\"     along with this program. If not, see
.\"     <http://www.gnu.org/licenses/>.
.\"
.ds n) srec_gowin
.TH \*(n) 5 SRecord "Reference Manual"
.if require_index \{
.XX "srec_gowin(5)" "Gowin bitstream file format"
.\}
.SH NAME
srec_gowin \- Gowin bitstream file format
.SH DESCRIPTION
This format is the Gowin bitstream file format. It is generated by the IDE from Gowin to program their FPGAs.

Lines starting with "//" contain comments.
Each byte is represented by a string containing 8 chars of '0' or '1' for each byte.
A line can contain multiple bytes.
There is no spacing between multiple bytes except an optional newline.
Each line contains a multiple of 8 bits (except comment lines).

There is no addressing and no checksum in this format.

.SH EXAMPLE
Here is an example Gowin bitstream file.
It contains the data \[lq]Hello, World\[rq].
.RS
.nf
.ft CW
//comment
01001000
0110010101101100
01101100
0110111100101100
00100000
010101110110111101110010
0110110001100100
.ft P
.fi
.RE

.ds n) srec_cat
.so man1/z_copyright.so
